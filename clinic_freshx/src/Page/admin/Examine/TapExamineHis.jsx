import React, { useState, useEffect } from "react";
import "./history.css";
import { Spin, message } from "antd";
import axios from "../../../services/axiosInstance";

const TapExamineHis = ({ patientId }) => {
  const [loading, setLoading] = useState(false);
  const [historyData, setHistoryData] = useState(null);

  useEffect(() => {
    if (patientId) {
      fetchHistory();
    }
  }, [patientId]);

  const fetchHistory = async () => {
    try {
      setLoading(true);
      const response = await axios.get(`/api/patient/gethistory/${patientId}`);
      if (response.data.status) {
        setHistoryData(response.data.data);
      }
    } catch (error) {
      message.error("L·ªói khi t·∫£i l·ªãch s·ª≠ kh√°m");
    } finally {
      setLoading(false);
    }
  };

  if (loading) return <Spin />;
  if (!historyData) return null;

  return (
    <div className="history-container">
      {/* Th·ªëng k√™ t·ªïng quan */}
      <div className="history-stats">
        <div className="stat-card">
          <div className="stat-value">{historyData.totalVisits}</div>
          <div className="stat-label">T·ªïng s·ªë l·∫ßn kh√°m</div>
        </div>
        <div className="stat-card">
          <div className="stat-value">{historyData.visitsThisYear.visitCount}</div>
          <div className="stat-label">S·ªë l·∫ßn kh√°m nƒÉm {historyData.visitsThisYear.year}</div>
        </div>
        <div className="stat-card">
          <div className="stat-value">-</div>
          <div className="stat-label">B·ªánh m√£n t√≠nh</div>
        </div>
        <div className="stat-card">
          <div className="stat-value">-</div>
          <div className="stat-label">T·ª∑ l·ªá tu√¢n th·ªß ƒëi·ªÅu tr·ªã</div>
        </div>
      </div>

      {/* B·ªô l·ªçc */}
      <div className="history-filters">
        <div className="filter-group">
          <label>T√¨m ki·∫øm</label>
          <input
            type="search"
            placeholder="T√¨m theo tri·ªáu ch·ª©ng, ch·∫©n ƒëo√°n..."
            className="filter-input"
          />
        </div>
        <div className="filter-group">
          <label>B√°c sƒ©</label>
          <select className="filter-input">
            <option>T·∫•t c·∫£ b√°c sƒ©</option>
          </select>
        </div>
        <div className="filter-group">
          <label>Lo·∫°i kh√°m</label>
          <select className="filter-input">
            <option>T·∫•t c·∫£</option>
            <option>Kh√°m m·ªõi</option>
            <option>T√°i kh√°m</option>
          </select>
        </div>
        <div className="filter-group">
          <label>Th·ªùi gian</label>
          <select className="filter-input">
            <option>T·∫•t c·∫£</option>
            <option>30 ng√†y g·∫ßn ƒë√¢y</option>
            <option>3 th√°ng g·∫ßn ƒë√¢y</option>
            <option>6 th√°ng g·∫ßn ƒë√¢y</option>
          </select>
        </div>
      </div>

      {/* Timeline v√† Chi ti·∫øt */}
      <div className="history-timeline">
        <div className="timeline-years">
          {/* Group by year logic can be added here */}
          <div className="year-item active">üìÖ NƒÉm {historyData.visitsThisYear.year}</div>
        </div>
        <div className="history-details">
          {historyData.patientMedicalHistory.map((record) => (
            <div key={record.receptionId} className="history-card">
              <div className="history-header">
                <div>
                  <h3>{new Date(record.examine.date).toLocaleString('vi-VN')}</h3>
                  <div style={{ color: "#6c757d" }}>
                    {record.examine.doctorName || "Ch∆∞a c√≥ th√¥ng tin"} - {record.examine.department || "Ch∆∞a c√≥ th√¥ng tin"}
                  </div>
                </div>
                <span className="visit-type visit-followup">
                  {record.examine.treatmentDetails || "Kh√°m b·ªánh"}
                </span>
              </div>
              <div className="history-content">
                <div className="content-section">
                  <h4>D·∫•u hi·ªáu sinh t·ªìn</h4>
                  <div className="vital-signs">
                    <div className="vital-item">
                      <div className="vital-label">Nhi·ªát ƒë·ªô</div>
                      <div className="vital-value">{record.examine.temperature || '-'}¬∞C</div>
                    </div>
                    <div className="vital-item">
                      <div className="vital-label">Huy·∫øt √°p</div>
                      <div className="vital-value">
                        {record.examine.bloodPressureSystolic || '-'}/{record.examine.bloodPressureDiastolic || '-'}
                      </div>
                    </div>
                    <div className="vital-item">
                      <div className="vital-label">Nh·ªãp tim</div>
                      <div className="vital-value">{record.examine.heartRate || '-'} bpm</div>
                    </div>
                  </div>
                  <h4>Tri·ªáu ch·ª©ng</h4>
                  <ul style={{ paddingLeft: 20 }}>
                    <li>{record.examine.symptoms || "Kh√¥ng c√≥ tri·ªáu ch·ª©ng"}</li>
                  </ul>
                  <h4>Ch·∫©n ƒëo√°n</h4>
                  <div>{record.examine.diagnosis || "Ch∆∞a c√≥ ch·∫©n ƒëo√°n"}</div>
                  <h4>K·∫øt qu·∫£ x√©t nghi·ªám</h4>
                  <div className="test-results">
                    {record.lapResult ? (
                      <>
                        <div className="test-item">üî¨ {record.lapResult.description || "Kh√¥ng c√≥ m√¥ t·∫£"}</div>
                        <div>{record.lapResult.conclusion || "Kh√¥ng c√≥ k·∫øt lu·∫≠n"}</div>
                      </>
                    ) : (
                      <div>Kh√¥ng c√≥ k·∫øt qu·∫£ x√©t nghi·ªám</div>
                    )}
                  </div>
                </div>
                <div className="content-section">
                  <h4>ƒê∆°n thu·ªëc</h4>
                  {record.examine.prescriptionExamine ? (
                    <ul className="medication-list">
                      {record.examine.prescriptionExamine.details.map((med) => (
                        <li key={med.prescriptionDetailId} className="medication-item">
                          <div className="medication-name">
                            {med.drugName || `Thu·ªëc #${med.drugCatalogId}`}
                          </div>
                          <div className="medication-details">
                            S√°ng: {med.morningDose}, Tr∆∞a: {med.noonDose}, 
                            Chi·ªÅu: {med.afternoonDose}, T·ªëi: {med.eveningDose} √ó {med.daysOfSupply} ng√†y
                          </div>
                        </li>
                      ))}
                    </ul>
                  ) : (
                    <div>Kh√¥ng c√≥ ƒë∆°n thu·ªëc</div>
                  )}
                  <h4>L·ªùi d·∫∑n</h4>
                  <div className="doctor-note">
                    {record.examine.medicalAdvice || "Kh√¥ng c√≥ l·ªùi d·∫∑n"}
                  </div>
                </div>
              </div>
              <div className="history-footer">
                <button className="action-btn btn-primary">
                  üîÑ T√°i s·ª≠ d·ª•ng ƒë∆°n thu·ªëc
                </button>
                <button className="action-btn btn-secondary">üñ®Ô∏è In ƒë∆°n thu·ªëc</button>
                <button className="action-btn btn-secondary">
                  üìÑ Xem phi·∫øu kh√°m
                </button>
                <button className="action-btn btn-secondary">
                  üìä Xem k·∫øt qu·∫£ XN
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default TapExamineHis;